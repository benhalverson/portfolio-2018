// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it should render the homepage 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HomePage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <section
        className="hero"
>
        <div
                className="hero-content"
        >
                <h1>
                        Title
                </h1>
                <p>
                        lorem text
                </p>
                <a
                        className="action-btn"
                        href="/contact"
                >
                        Hire me
                </a>
        </div>
</section>,
      "className": "content",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="hero-content"
>
          <h1>
                    Title
          </h1>
          <p>
                    lorem text
          </p>
          <a
                    className="action-btn"
                    href="/contact"
          >
                    Hire me
          </a>
</div>,
        "className": "hero",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Title
</h1>,
            <p>
              lorem text
</p>,
            <a
              className="action-btn"
              href="/contact"
>
              Hire me
</a>,
          ],
          "className": "hero-content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Title",
            },
            "ref": null,
            "rendered": "Title",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "lorem text",
            },
            "ref": null,
            "rendered": "lorem text",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hire me",
              "className": "action-btn",
              "href": "/contact",
            },
            "ref": null,
            "rendered": "Hire me",
            "type": "a",
          },
        ],
        "type": "div",
      },
      "type": "section",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <section
          className="hero"
>
          <div
                    className="hero-content"
          >
                    <h1>
                              Title
                    </h1>
                    <p>
                              lorem text
                    </p>
                    <a
                              className="action-btn"
                              href="/contact"
                    >
                              Hire me
                    </a>
          </div>
</section>,
        "className": "content",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="hero-content"
>
            <h1>
                        Title
            </h1>
            <p>
                        lorem text
            </p>
            <a
                        className="action-btn"
                        href="/contact"
            >
                        Hire me
            </a>
</div>,
          "className": "hero",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Title
</h1>,
              <p>
                lorem text
</p>,
              <a
                className="action-btn"
                href="/contact"
>
                Hire me
</a>,
            ],
            "className": "hero-content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Title",
              },
              "ref": null,
              "rendered": "Title",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "lorem text",
              },
              "ref": null,
              "rendered": "lorem text",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Hire me",
                "className": "action-btn",
                "href": "/contact",
              },
              "ref": null,
              "rendered": "Hire me",
              "type": "a",
            },
          ],
          "type": "div",
        },
        "type": "section",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
